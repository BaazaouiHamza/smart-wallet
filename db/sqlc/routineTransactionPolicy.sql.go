// Code generated by sqlc. DO NOT EDIT.
// source: routineTransactionPolicy.sql

package db

import (
	"context"
	"time"
)

const createRoutineTransactionPolicy = `-- name: CreateRoutineTransactionPolicy :one
INSERT INTO routine_transaction_policy (
  name,
  description,
  sender,
	receiver,
	created_at,
  schedule_start_date, 
  schedule_end_date,
  frequency,
  amount
) VALUES (
  $1,$2,$3,$4,$5,$6,$7,$8,$9
) RETURNING name, description, sender, receiver, created_at, schedule_start_date, schedule_end_date, frequency, amount
`

type CreateRoutineTransactionPolicyParams struct {
	Name              string    `json:"name"`
	Description       string    `json:"description"`
	Sender            string    `json:"sender"`
	Receiver          string    `json:"receiver"`
	CreatedAt         time.Time `json:"created_at"`
	ScheduleStartDate time.Time `json:"schedule_start_date"`
	ScheduleEndDate   time.Time `json:"schedule_end_date"`
	Frequency         string    `json:"frequency"`
	Amount            int32     `json:"amount"`
}

func (q *Queries) CreateRoutineTransactionPolicy(ctx context.Context, arg CreateRoutineTransactionPolicyParams) (RoutineTransactionPolicy, error) {
	row := q.db.QueryRowContext(ctx, createRoutineTransactionPolicy,
		arg.Name,
		arg.Description,
		arg.Sender,
		arg.Receiver,
		arg.CreatedAt,
		arg.ScheduleStartDate,
		arg.ScheduleEndDate,
		arg.Frequency,
		arg.Amount,
	)
	var i RoutineTransactionPolicy
	err := row.Scan(
		&i.Name,
		&i.Description,
		&i.Sender,
		&i.Receiver,
		&i.CreatedAt,
		&i.ScheduleStartDate,
		&i.ScheduleEndDate,
		&i.Frequency,
		&i.Amount,
	)
	return i, err
}
