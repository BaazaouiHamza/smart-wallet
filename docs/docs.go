// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/:nym-id/transaction-trigger-policy": {
            "get": {
                "description": "Get all transaction trigger policies",
                "tags": [
                    "transaction-trigger-policy"
                ],
                "operationId": "list-transaction-trigger-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.listTransactionTriggerPoliciesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a transaction trigger policy",
                "tags": [
                    "transaction-trigger-policy"
                ],
                "operationId": "create-transaction-trigger-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transation Trigger Policy",
                        "name": "TTPRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TTPRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/api/:nym-id/transaction-trigger-policy/:id": {
            "get": {
                "description": "Get a transaction trigger policy",
                "tags": [
                    "transaction-trigger-policy"
                ],
                "operationId": "get-transaction-trigger-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.TransactionTriggerPolicy"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a transaction trigger policy",
                "tags": [
                    "transaction-trigger-policy"
                ],
                "operationId": "update-transaction-trigger-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transation Trigger Policy",
                        "name": "TTPRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a transaction trigger policy",
                "tags": [
                    "transaction-trigger-policy"
                ],
                "operationId": "delete-transaction-trigger-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "api.TTPRequest": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "name",
                "recipient",
                "targetedBalance"
            ],
            "properties": {
                "amount": {
                    "$ref": "#/definitions/types.Balance"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "recipient": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "targetedBalance": {
                    "$ref": "#/definitions/types.Balance"
                }
            }
        },
        "api.listTransactionTriggerPoliciesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TransactionTriggerPolicy"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.Balance": {
            "type": "object",
            "additionalProperties": {"type": "string", "enum": ["Contributor", "User"]}
        },
        "types.TransactionTriggerPolicy": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/types.Balance"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nymID": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "recipient": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "targetedBalance": {
                    "$ref": "#/definitions/types.Balance"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.0.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Smart Wallet",
	Description: "ProsperUs Smart wallet",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
