// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/:nym-id/routine-transaction-policy": {
            "get": {
                "description": "Get all transaction trigger policies",
                "tags": [
                    "routine-transaction-policy"
                ],
                "operationId": "list-routine-transaction-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.listRoutineTransactionPoliciesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a routine transaction policy",
                "tags": [
                    "routine-transaction-policy"
                ],
                "operationId": "create-routine-transaction-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Routine Transation Policy",
                        "name": "RTPRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RTPRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/api/:nym-id/routine-transaction-policy/:id": {
            "get": {
                "description": "Get a routine transaction policy",
                "tags": [
                    "routine-transaction-policy"
                ],
                "operationId": "get-routine-transaction-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.RoutineTransactionPolicy"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a routine transaction policy",
                "tags": [
                    "routine-transaction-policy"
                ],
                "operationId": "update-routine-transaction-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Routine Transation Policy",
                        "name": "RTPRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a routine transaction policy",
                "tags": [
                    "routine-transaction-policy"
                ],
                "operationId": "delete-routine-transaction-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/api/:nym-id/transaction-trigger-policy": {
            "get": {
                "description": "Get all transaction trigger policies",
                "tags": [
                    "transaction-trigger-policy"
                ],
                "operationId": "list-transaction-trigger-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 10,
                        "minimum": 5,
                        "type": "integer",
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.listTransactionTriggerPoliciesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a transaction trigger policy",
                "tags": [
                    "transaction-trigger-policy"
                ],
                "operationId": "create-transaction-trigger-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transation Trigger Policy",
                        "name": "TTPRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TTPRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                }
            }
        },
        "/api/:nym-id/transaction-trigger-policy/:id": {
            "get": {
                "description": "Get a transaction trigger policy",
                "tags": [
                    "transaction-trigger-policy"
                ],
                "operationId": "get-transaction-trigger-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.TransactionTriggerPolicy"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a transaction trigger policy",
                "tags": [
                    "transaction-trigger-policy"
                ],
                "operationId": "update-transaction-trigger-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transation Trigger Policy",
                        "name": "TTPRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete a transaction trigger policy",
                "tags": [
                    "transaction-trigger-policy"
                ],
                "operationId": "delete-transaction-trigger-policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NymID",
                        "name": "nym-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "api.RTPRequest": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "frequency",
                "name",
                "nym_id",
                "recipient",
                "schedule_end_date",
                "schedule_start_date"
            ],
            "properties": {
                "amount": {
                    "$ref": "#/definitions/types.Balance"
                },
                "description": {
                    "type": "string"
                },
                "frequency": {
                    "type": "string",
                    "enum": [
                        "DAILY",
                        "MONTHLY",
                        "WEEKLY"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "nym_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "recipient": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "schedule_end_date": {
                    "type": "string"
                },
                "schedule_start_date": {
                    "type": "string"
                }
            }
        },
        "api.TTPRequest": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "name",
                "recipient",
                "targetedBalance"
            ],
            "properties": {
                "amount": {
                    "$ref": "#/definitions/types.Balance"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "recipient": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "targetedBalance": {
                    "$ref": "#/definitions/types.Balance"
                }
            }
        },
        "api.listRoutineTransactionPoliciesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RoutineTransactionPolicy"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.listTransactionTriggerPoliciesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.TransactionTriggerPolicy"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.Balance": {
            "type": "object",
            "additionalProperties": {
                "type": "integer"
            }
        },
        "types.RoutineTransactionPolicy": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/types.Balance"
                },
                "description": {
                    "type": "string"
                },
                "frequency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nymID": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "recipient": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "scheduleEndDate": {
                    "type": "string"
                },
                "scheduleStartDate": {
                    "type": "string"
                }
            }
        },
        "types.TransactionTriggerPolicy": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/types.Balance"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nymID": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "recipient": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "targetedBalance": {
                    "$ref": "#/definitions/types.Balance"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Smart Wallet",
	Description:      "ProsperUs Smart wallet",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
